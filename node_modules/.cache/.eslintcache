[{"E:\\React-Js-Project\\reactjs-music-app\\src\\index.js":"1","E:\\React-Js-Project\\reactjs-music-app\\src\\App.js":"2","E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicContainer\\musicContainer.jsx":"3","E:\\React-Js-Project\\reactjs-music-app\\src\\component\\Header\\Header.jsx":"4","E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicContainer\\musicPlayer\\musicPlay.jsx":"5","E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicContainer\\musicList\\musicList.jsx":"6","E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicProgressBar\\musicProgressBar.jsx":"7"},{"size":254,"mtime":1683809492601,"results":"8","hashOfConfig":"9"},{"size":472,"mtime":1684292898761,"results":"10","hashOfConfig":"9"},{"size":3798,"mtime":1684332998110,"results":"11","hashOfConfig":"9"},{"size":4492,"mtime":1684320011571,"results":"12","hashOfConfig":"9"},{"size":6176,"mtime":1684343299083,"results":"13","hashOfConfig":"9"},{"size":2879,"mtime":1684333061310,"results":"14","hashOfConfig":"9"},{"size":3388,"mtime":1684344440740,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gdueox",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"E:\\React-Js-Project\\reactjs-music-app\\src\\index.js",[],[],"E:\\React-Js-Project\\reactjs-music-app\\src\\App.js",["45"],[],"\nimport './App.css';\nimport Header from './component/Header/Header';\nimport MusicContainer from './component/musicContainer/musicContainer';\nimport MusicProgressBar from './component/musicProgressBar/musicProgressBar';\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"container_fluid\">\n        <div className=\"container-box\">\n          <Header />\n          <MusicContainer index={0}/>\n          \n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n",[],"E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicContainer\\musicContainer.jsx",["46","47","48"],[],"import MusicList from \"./musicList/musicList\";\r\nimport MusicPlay from \"./musicPlayer/musicPlay\";\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport './musiccontainer.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MusicProgressBar from \"../musicProgressBar/musicProgressBar\";\r\n//array of object of music \r\nimport song1 from '../../audio_source/1.mp3'\r\nimport song2 from '../../audio_source/2.mp3'\r\nimport song3 from '../../audio_source/3.mp3'\r\nimport song4 from '../../audio_source/4.mp3'\r\nimport song5 from '../../audio_source/5.mp3'\r\nimport song6 from '../../audio_source/6.mp3'\r\nimport song7 from '../../audio_source/7.mp3'\r\nimport song8 from '../../audio_source/8.mp3'\r\nimport song9 from '../../audio_source/9.mp3'\r\n\r\nconst tracks = [\r\n  {\r\n    name: \"Tal Ko Pani\",\r\n    artist: \"Nepathya\",\r\n    cover: \"https://c-cl.cdn.smule.com/smule-gg-uw1-s-4/arr/13/af/89f59cba-124c-4dd2-badc-761908c2d1d0.jpg\",\r\n    source: song1,\r\n    favorited: false\r\n  },\r\n  {\r\n    name: \"Herda Herdai\",\r\n    artist: \"Sushant Kc\",\r\n    cover: \"https://i.ytimg.com/vi/iuGToNdbcCo/maxresdefault.jpg\",\r\n    source: song2,\r\n    favorited: true\r\n  },\r\n  {\r\n    name: \"Fulthunge Rani\",\r\n    artist: \"Sujan Chapagain\",\r\n    cover: \"https://i.ytimg.com/vi/KZNDqHI8AW4/maxresdefault.jpg\",\r\n    source:song3,\r\n    favorited: false\r\n  },\r\n  {\r\n    name: \"Kun Rangako\",\r\n    artist: \"Agantuk Kharel\",\r\n    cover: \"https://i.scdn.co/image/ab67616d0000b27368f6a089deb1534216810ffa\",\r\n    source: song4,\r\n    favorited: false\r\n  },\r\n  {\r\n    name: \"Ekai Najar Ma\",\r\n    artist: \"Dipeesh Kishor Bhattarai\",\r\n    cover: \"https://i.scdn.co/image/ab67616d0000b27382875f4e492fbdeec0a67306\",\r\n    source: song5,\r\n    favorited: true\r\n  },\r\n  {\r\n    name: \"K Maya Lagchha Ra\",\r\n    artist: \"Eleena & Nishan Bhattrai\",\r\n    cover: \"https://i1.sndcdn.com/artworks-e4v1euhqxtCC-0-t500x500.jpg\",\r\n    source: song6,\r\n    favorited: false\r\n  },\r\n  {\r\n    name: \"Bagne Khola\",\r\n    artist: \"Sadhana Sargam\",\r\n    cover: \"https://c.saavncdn.com/752/Bagne-Khola-Ko-Nepali-2010-20220322115035-500x500.jpg\",\r\n    source:song7,\r\n    favorited: true\r\n  },\r\n  {\r\n    name: \"पानी मिठो मेरो\",\r\n    artist: \"Sanjeevani\",\r\n    cover: \"https://i.ytimg.com/vi/CqKVie-3PAk/maxresdefault.jpg\",\r\n    source: song8,\r\n    favorited: false\r\n  },\r\n  {\r\n    name: \"डाडा घरे साइली \",\r\n    artist: \"Swarop raj Acharya & Laxmi Mall\",\r\n    cover: \"https://i.ytimg.com/vi/v73QW4UbeLg/maxresdefault.jpg\",\r\n    source: song9,\r\n    favorited: false\r\n  }];\r\n\r\n\r\n\r\nconst player = new Audio(tracks[0].source);\r\n  player.setAttribute('preload','metadata');\r\n//create intial context for suffle and repeat\r\nconst userOptions = React.createContext({\r\n  shuffle:false,\r\n  repeat:false\r\n});\r\n//music play state\r\nconst MusicContainer = (props) => {\r\n  let [playState,setPlayState]=useState(false); \r\n  let [index, setIndex] = useState(0);\r\n let options =React.useContext(userOptions);\r\n  return (\r\n    <>\r\n    <div className=\"music_section\">\r\n      <div className=\"musiccontainer\">\r\n\r\n        <Grid container\r\n          direction=\"row\">\r\n          <Grid xs={5}>\r\n            <MusicPlay tracks={tracks} index={index} setIndex={setIndex} player={player} options={options} playState={playState} setPlayState={setPlayState}/>\r\n          </Grid>\r\n          <Grid xs={7}>\r\n            <MusicList tracks={tracks} index={index} setIndex={setIndex} playState={playState} setPlayState={setPlayState}/>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </div>\r\n      <MusicProgressBar  player={player} options={options}  index={index} setIndex={setIndex}/>\r\n     </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default MusicContainer;",[],"E:\\React-Js-Project\\reactjs-music-app\\src\\component\\Header\\Header.jsx",[],[],[],"E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicContainer\\musicPlayer\\musicPlay.jsx",["49","50","51","52","53","54","55","56","57","58","59","60","61"],[],"\r\nimport './musicplay.css';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\r\nimport RepeatIcon from '@mui/icons-material/Repeat';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { makeStyles } from '@mui/material/styles';\r\n\r\n\r\n\r\nexport default function MusicPlay(props) {\r\n \r\n  let [msuffle,setMsuffle]=useState(props.options.shuffle);\r\n  let [mrepeat,setMrepeat] =useState(props.options.repeat);\r\n  let [mfavorite,setFavorite] = useState(props.tracks[props.index].favorited);\r\n  useEffect(\r\n      ()=>{ setFavorite(props.tracks[props.index].favorited)}) \r\n      function shuffle (){\r\n          props.options.shuffle=!props.options.shuffle\r\n          props.options.repeat=false;\r\n          setMsuffle(!msuffle);\r\n          setMrepeat(false);\r\n\r\n      }\r\n      function repeat (){\r\n         props.options.repeat=!props.options.repeat\r\n         props.options.shuffle=false;\r\n          setMsuffle(false)\r\n         setMrepeat(!mrepeat)\r\n\r\n      }\r\n      function favorite(){\r\n          props.tracks[props.index].favorited=!props.tracks[props.index].favorited;\r\n          setFavorite(props.tracks[props.index].favorited);\r\n\r\n      }\r\n   \r\n   let oldindex = useRef(props.index);\r\n   useEffect(() => {\r\n    if (props.playState === true) {\r\n      if (props.player.paused) {\r\n        props.player.play().catch(error => {\r\n          console.error('Failed to play:', error);\r\n        });\r\n      }\r\n    } else {\r\n      if (!props.player.paused) {\r\n        props.player.pause();\r\n      }\r\n    }\r\n  \r\n    if (props.index !== oldindex.current) {\r\n      if (!props.player.paused) {\r\n        props.player.pause();\r\n      }\r\n  \r\n      props.player.src = props.tracks[props.index].source;\r\n      props.player.load();\r\n  \r\n      setTimeout(() => {\r\n        if (props.player.paused) {\r\n          props.player.play().catch(error => {\r\n            console.error('Failed to play:', error);\r\n          });\r\n        }\r\n        props.setPlayState(true);\r\n      }, 500);\r\n  \r\n      oldindex.current = props.index;\r\n    }\r\n  }, [props.index, props.playState, props.player, props.tracks]);\r\n  \r\n  \r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className=\"card_box\">\r\n      <Card sx={{ minHeight: '60%', minWidth: '50%', margin: 'auto', borderRadius: '1rem' }}>\r\n\r\n        {\r\n          mfavorite &&\r\n          <Box sx={{ marginLeft: '90%', marginTop: '2%' }} onClick={favorite}>\r\n          <FavoriteBorderIcon sx={{color:'#000'}}/>\r\n        </Box>\r\n        ||\r\n        <Box sx={{ marginLeft: '90%', marginTop: '2%',cursor:'pointer' }} onClick={favorite}>\r\n          <FavoriteIcon />\r\n        </Box>\r\n        }\r\n        <CardMedia \r\n          sx={\r\n            props.playState===true?\r\n            { \r\n              height: '230px', \r\n              width: '230px', \r\n              borderRadius: '50%',  \r\n              margin: 'auto',\r\n              \r\n                animation: \"spin 2s linear infinite\",\r\n                \"@keyframes spin\": {\r\n                  \"0%\": {\r\n                    transform: \"rotate(360deg)\",\r\n                  },\r\n                  \"100%\": {\r\n                    transform: \"rotate(0deg)\",\r\n                  },\r\n                },\r\n               }\r\n               :\r\n               { \r\n                height: '230px', \r\n                width: '230px', \r\n                borderRadius: '50%',  \r\n                margin: 'auto'\r\n  \r\n            }}\r\n          image={props.tracks[props.index].cover}\r\n          title=\"green iguana\" \r\n         \r\n        />\r\n        <CardContent>\r\n          \r\n          <Typography gutterBottom variant=\"subtitle1\" fontWeight='bold' textAlign='center' component=\"div\">\r\n        {props.tracks[props.index].artist } - { props.tracks[props.index].name } \r\n          </Typography>\r\n         \r\n        </CardContent>\r\n      </Card>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pl: 1, pb: 1 }}>\r\n        {\r\n          msuffle &&\r\n          <IconButton aria-label='suffle' onClick={shuffle}>\r\n            <ShuffleIcon sx={{color:'#000',cursor:'pointer'}}/>\r\n          </IconButton>\r\n          ||\r\n          <IconButton aria-label='shuffle' onClick={shuffle}>\r\n            <ShuffleIcon />\r\n          </IconButton>\r\n        }\r\n        <IconButton aria-label=\"previous\" onClick={x=>props.setIndex(props.index-1<0?8:props.index-1)}>\r\n          {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}\r\n        </IconButton>\r\n        {\r\n         (props.playState===true) ?\r\n          <IconButton aria-label=\"play/pause\" onClick={x=>props.setPlayState(false)}>\r\n          <PauseIcon sx={{ height: 38, width: 38 }} />\r\n        </IconButton>:\r\n        <IconButton aria-label=\"play/pause\"onClick={x=>props.setPlayState(true)}>\r\n          <PlayArrowIcon  sx={{ height: 38, width: 38 }} />\r\n        </IconButton>\r\n        }\r\n        <IconButton aria-label=\"next\" onClick={x=>props.setIndex((props.index+1)%9)} >\r\n          {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}\r\n        </IconButton>\r\n        \r\n       { mrepeat && \r\n       <IconButton aria-aria-label='repeat'>\r\n          <RepeatIcon onClick={repeat} sx={{color:'#000',cursor:'pointer'}} />\r\n         \r\n        </IconButton>\r\n        ||\r\n        <IconButton aria-aria-label='repeat'>\r\n          <RepeatIcon onClick={repeat} />\r\n         \r\n        </IconButton>}\r\n      </Box>\r\n\r\n    </div>\r\n  );\r\n}","E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicContainer\\musicList\\musicList.jsx",["62","63","64","65","66"],[],"import { IconButton, Typography } from \"@mui/material\";\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Box from '@mui/material/Box'\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport './musiclist.css';\r\nconst MusicList = (props) => {\r\nconst nextSong =(e)=>{\r\nprops.setIndex(e);\r\nprops.setPlayState(true);\r\n}\r\n  return (\r\n    <>\r\n      <Container mxWidth=\"sm\" >\r\n        <Grid container spacing={0}>\r\n          <Grid xs={12} >\r\n            <Typography variant=\"h5\" fontWeight=\"bold\" component=\"h2\">\r\n              {props.tracks[props.index].name}\r\n            </Typography>\r\n\r\n\r\n          </Grid>\r\n          <Grid xs={12} sx={{ display: 'flex' }}>\r\n            <Typography variant=\"body1\" fontWeight=\"bold\" component=\"h2\">\r\n              {props.index+1}. {props.tracks[props.index].artist}\r\n            </Typography>\r\n            <Typography variant=\"body1\" fontWeight=\"bold\" component=\"h2\" sx={{ mx: 2 }}>\r\n              . 2023\r\n            </Typography>\r\n            <Typography variant=\"body1\" fontWeight=\"bold\" component=\"h2\" sx={{ mx: 2 }}>\r\n              . {props.tracks.length} Songs\r\n            </Typography>\r\n\r\n          </Grid>\r\n          {\r\n            props.tracks.map((song, index) => {\r\n              return (\r\n                <Grid\r\n                 \r\n                  xs={12}\r\n                  sx={\r\n                    props.index === index\r\n                      ? {\r\n                        backgroundColor: 'black',\r\n                        borderRadius: '5px',\r\n                        display:'flex',\r\n                        pr:1,\r\n                        py:1,\r\n                        color: 'white',\r\n                      }\r\n                      : {\r\n                        my:1,\r\n                        color: 'black',\r\n                       \r\n                      }\r\n                  }\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n\r\n                     onClick={(e)=>nextSong(index)}\r\n                      variant=\"body1\"\r\n                      component=\"h2\"\r\n                      sx={{ mx: 1, display: 'flex', justifyContent: 'start',cursor:'pointer'}}\r\n                    >\r\n                     {\r\n                    ( props.playState===true && props.index===index) && \r\n                       <PlayArrowIcon/>\r\n                       ||\r\n                       ( props.playState===false && props.index===index) && \r\n                       <PauseIcon/>\r\n                     }\r\n                     {index+1}. {song.artist}-{song.name}\r\n                    </Typography>\r\n                  </Box>\r\n                   \r\n                </Grid>\r\n              );\r\n            })\r\n          }\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\nexport default MusicList;","E:\\React-Js-Project\\reactjs-music-app\\src\\component\\musicProgressBar\\musicProgressBar.jsx",["67","68"],[],"\r\nimport './musicprogress.css'\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport PlaylistPlayIcon from '@mui/icons-material/PlaylistPlay';\r\nimport { IconButton } from '@mui/material';\r\nimport { useState } from 'react';\r\n\r\nconst MusicProgressBar = (props) => {\r\n   let [currentLength, setCurrentLength]=useState(0);\r\n   let [length,setLength]=useState(0);\r\n   let [volume,setVolume]=useState(1);\r\n   const progressbar = document.querySelector('.progress_onbar');\r\n  \r\n   const changeProgress=(e)=>{\r\n    let offset = e.target.getBoundingClientRect().left;\r\n   let newOffset =e.clientX\r\n   const elmentWidth = document.querySelector('.progressbar').offsetWidth;\r\n    console.log(newOffset)\r\n    let newWidth = newOffset-offset;\r\n    progressbar.style.width=`${newWidth}px`;\r\n    let secPerPixel = length/elmentWidth;\r\n    \r\n   props.player.currentTime = secPerPixel*newWidth;\r\n\r\n   }\r\n   setInterval(()=>{\r\n      setLength(Math.ceil(props.player.duration))\r\n      setCurrentLength(Math.ceil(props.player.currentTime))\r\n      const elmentWidth = document.querySelector('.progressbar').offsetWidth;\r\n      const secperPixel = elmentWidth/props.player.duration;\r\n      let newWidth = (props.player.currentTime)*secperPixel;\r\n      document.querySelector('.progress_onbar').style.width=`${newWidth}px`;\r\n      \r\n      if(props.player.currentTime===props.player.duration){\r\n         if(props.options.shuffle===true){\r\n            props.setIndex((parseInt(Math.random()*1000))%9);\r\n\r\n         }\r\n         else if(props.options.repeat===true){\r\n            props.player.play();\r\n\r\n         }\r\n         else{\r\n            props.setIndex((props.index+1)%9);\r\n         }\r\n      }\r\n   \r\n   },\r\n   1000\r\n   )\r\nconst changeVolume=(e)=>{\r\n console.log(1)\r\n}\r\n\r\nfunction formatTime(s){\r\n\t\treturn Number.isNaN(s) ? '0:00' : (s-(s%=60))/60+(9<s?':':':0')+s\r\n\t}\r\n   return (\r\n\r\n      <>\r\n         <div className=\"musicprogress\">\r\n            <div className=\"phone_storage\">\r\n               <img src=\"https://www.freeiconspng.com/thumbs/iphone-x-pictures/apple-iphone-x-pictures-5.png\" alt=\"\" />\r\n               <div className=\"text\">\r\n                  <p className='phone'>iphone</p>\r\n                  <p className='sorage'>64GB</p>\r\n               </div>\r\n               <div className=\"icon\">\r\n                  <ArrowDropUpIcon />\r\n               </div>\r\n            </div>\r\n            <div className=\"progress\">\r\n               <div className=\"run_duration\">\r\n                   {formatTime(currentLength)}\r\n               </div>\r\n               <div className=\"progressbar\" onClick={(e)=>changeProgress(e)}>\r\n                  <div className=\"progress_onbar\">\r\n                     <div className=\"progress_circle\">\r\n\r\n                     </div>\r\n                  </div>\r\n\r\n               </div>\r\n               <div className=\"totalduration\">\r\n                 {formatTime(length)}\r\n               </div>\r\n               <div className=\"sound_icon\">\r\n                  <IconButton onClick={(e)=>changeVolume(props.player)}>\r\n                     <VolumeUpIcon />\r\n                  </IconButton>\r\n                  <IconButton>\r\n                     <PlaylistPlayIcon />\r\n                  </IconButton>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default MusicProgressBar;",{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":24},{"ruleId":"69","severity":1,"message":"73","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":19},{"ruleId":"69","severity":1,"message":"74","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":7,"column":17,"nodeType":"71","messageId":"72","endLine":7,"endColumn":26},{"ruleId":"69","severity":1,"message":"76","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":19},{"ruleId":"69","severity":1,"message":"77","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":14},{"ruleId":"69","severity":1,"message":"78","line":21,"column":10,"nodeType":"71","messageId":"72","endLine":21,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":30,"column":3,"nodeType":"71","endLine":30,"endColumn":12,"suggestions":"81"},{"ruleId":"79","severity":1,"message":"82","line":85,"column":6,"nodeType":"83","endLine":85,"endColumn":64,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":95,"column":21,"nodeType":"87","messageId":"88","endLine":95,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":99,"column":9,"nodeType":"87","messageId":"88","endLine":99,"endColumn":11},{"ruleId":"85","severity":1,"message":"86","line":145,"column":19,"nodeType":"87","messageId":"88","endLine":145,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":149,"column":11,"nodeType":"87","messageId":"88","endLine":149,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":170,"column":18,"nodeType":"87","messageId":"88","endLine":170,"endColumn":20},{"ruleId":"89","severity":1,"message":"90","line":171,"column":20,"nodeType":"91","endLine":171,"endColumn":44},{"ruleId":"85","severity":1,"message":"86","line":175,"column":9,"nodeType":"87","messageId":"88","endLine":175,"endColumn":11},{"ruleId":"89","severity":1,"message":"90","line":176,"column":21,"nodeType":"91","endLine":176,"endColumn":45},{"ruleId":"69","severity":1,"message":"92","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":68,"column":70,"nodeType":"87","messageId":"88","endLine":68,"endColumn":72},{"ruleId":"85","severity":1,"message":"86","line":70,"column":24,"nodeType":"87","messageId":"88","endLine":70,"endColumn":26},{"ruleId":"85","severity":1,"message":"93","line":70,"column":24,"nodeType":"87","messageId":"88","endLine":70,"endColumn":26},{"ruleId":"85","severity":1,"message":"93","line":71,"column":74,"nodeType":"87","messageId":"88","endLine":71,"endColumn":76},{"ruleId":"69","severity":1,"message":"94","line":12,"column":9,"nodeType":"71","messageId":"72","endLine":12,"endColumn":15},{"ruleId":"69","severity":1,"message":"95","line":12,"column":16,"nodeType":"71","messageId":"72","endLine":12,"endColumn":25},"no-unused-vars","'MusicProgressBar' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'useEffect' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFavorite'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.tracks, props.index] as a second argument to the useEffect Hook.",["96"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["97"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/aria-props","aria-aria-label: This attribute is an invalid ARIA attribute.","JSXAttribute","'IconButton' is defined but never used.","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'volume' is assigned a value but never used.","'setVolume' is assigned a value but never used.",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Add dependencies array: [props.tracks, props.index]",{"range":"102","text":"103"},"Update the dependencies array to be: [props, props.index, props.playState, props.player, props.tracks]",{"range":"104","text":"105"},[1380,1380],", [props.tracks, props.index]",[2826,2884],"[props, props.index, props.playState, props.player, props.tracks]"]